BAS:[{"name":"","code":"/*Dat:*/\n_template(\"await (new Promise((resolve, reject) =\\u003e \\u007b\\n\t/*Place your code here and call resolve to proceed*/\\n    \\u0022use strict\\u0022;\\n\\n(() =\\u003e \\u007b\\n  var __webpack_modules__ = \\u007b\\n    766: (module, __unused_webpack_exports, __webpack_require__) =\\u003e \\u007b\\n      var __dirname = \\u0022/\\u0022;\\n\\n      const \\u007b\\n        platform\\n      \\u007d = __webpack_require__(37),\\n            \\u007b\\n        existsSync\\n      \\u007d = __webpack_require__(147),\\n            local = () =\\u003e \\u007b\\n        const t = `$\\u007b__dirname\\u007d/config.local.js`;\\n        return existsSync(t) ? __webpack_require__(387)(t) : \\u007b\\u007d;\\n      \\u007d,\\n            ssh = () =\\u003e \\u007b\\n        try \\u007b\\n          return eval(\\u0022require.resolve(\\u0027@dkh-pkg/node-pty-ssh/ssh/ssh.exe\\u0027)\\u0022);\\n        \\u007d catch (t) \\u007b\\n          return \\u0022win32\\u0022 === platform() ? \\u0022ssh.exe\\u0022 : \\u0022ssh\\u0022;\\n        \\u007d\\n      \\u007d;\\n\\n      module.exports = \\u007b\\n        listUrl: [[URL_SSH]],\\n        listCacheTimeout: 6e5,\\n        portRange: [10000, 10040],\\n        rotateAfter: 12e4,\\n        knockTimeout: 500,\\n        knockCacheTimeout: 15e4,\\n        renewAfter: 6e5,\\n        connectTimeout: 500,\\n        connectionAttempts: 3,\\n        knownHostsFile: \\u0022known_hosts.local\\u0022,\\n        enableDataCompression: !0,\\n        bin: ssh(),\\n        debugLevel: process.env.DEBUG_LEVEL,\\n        ...local()\\n      \\u007d;\\n    \\u007d,\\n    158: (t, e, s) =\\u003e \\u007b\\n      const \\u007b\\n        debug: o\\n      \\u007d = s(151),\\n            \\u007b\\n        EventEmitter: n\\n      \\u007d = s(361),\\n            r = (s(599), s(680));\\n      t.exports = class extends n \\u007b\\n        constructor(t) \\u007b\\n          super(), this.config = t, this.server = null, this.process = null, this.rotating = !1, this.lastUpdated = 0, this.timer = null;\\n        \\u007d\\n\\n        connect() \\u007b\\n          if (!this.server) throw Error(\\u0022no server has been set\\u0022);\\n          if (this.process) return o(2)(\\u0022rotate connection on port\\u0022, this.config.bind), this.rotating = !0, void this.process.kill();\\n          const t = r(\\u007b ...this.config,\\n            ...this.server\\n          \\u007d);\\n          this.process = t, this.rotating = !1, t.onExit(() =\\u003e \\u007b\\n            this.process = null, this.rotating ? this.connect() : (this.server = null, this.lastUpdated = 0, this.emit(\\u0022disconnected\\u0022));\\n          \\u007d);\\n        \\u007d\\n\\n        setServer(t) \\u007b\\n          this.server = t, this.touch(), this.connect();\\n        \\u007d\\n\\n        touch() \\u007b\\n          this.lastUpdated = Date.now();\\n        \\u007d\\n\\n      \\u007d;\\n    \\u007d,\\n    305: (t, e, s) =\\u003e \\u007b\\n      const o = s(158),\\n            n = s(599),\\n            \\u007b\\n        info: r,\\n        debug: i\\n      \\u007d = s(151),\\n            c = s(783);\\n      t.exports = class \\u007b\\n        constructor(t) \\u007b\\n          i(3)(\\u0022config\\u0022, t), this.config = t, this.serverList = t.serverList || new c(t), this.connections = [];\\n        \\u007d\\n\\n        async connect() \\u007b\\n          i(4, \\u0022start rotation\\u0022);\\n          const \\u007b\\n            rotateAfter: t\\n          \\u007d = this.config,\\n                e = this.connections.filter((\\u007b\\n            lastUpdated: e\\n          \\u007d) =\\u003e n(e, t));\\n          if (!e.length) return void i(2, \\u0022redundant call to rotate\\u0022);\\n          i(1)(\\u0022prepare\\u0022, e.length, \\u0022servers\\u0022), e.forEach(t =\\u003e t.touch());\\n          const s = await this.serverList.select(e.length);\\n          e.forEach((t, e) =\\u003e t.setServer(s[e])), r(\\u0022connect\\u0022, ...e.map((\\u007b\\n            config: \\u007b\\n              bind: t\\n            \\u007d,\\n            server: \\u007b\\n              host: e\\n            \\u007d\\n          \\u007d) =\\u003e [t, e]).flat());\\n        \\u007d\\n\\n        rotate() \\u007b\\n          this.connections.forEach(t =\\u003e \\u007b\\n            t.lastUpdated = 0;\\n          \\u007d), this.connect();\\n        \\u007d\\n\\n        start() \\u007b\\n          const \\u007b\\n            portRange: [t, e],\\n            rotateAfter: s\\n          \\u007d = this.config;\\n          this.connections = Array(e - t + 1).fill().map((e, s) =\\u003e \\u007b\\n            const n = new o(\\u007b ...this.config,\\n              bind: t + s\\n            \\u007d);\\n            return n.on(\\u0022disconnected\\u0022, () =\\u003e this.connect()), n;\\n          \\u007d), this.connect(), setInterval(() =\\u003e this.rotate(), Math.max(3e4, s));\\n        \\u007d\\n\\n      \\u007d;\\n    \\u007d,\\n    783: (t, e, s) =\\u003e \\u007b\\n      const \\u007b\\n        readFile: o\\n      \\u007d = s(147),\\n            \\u007b\\n        default: n\\n      \\u007d = s(167),\\n            r = s(992),\\n            \\u007b\\n        debug: i\\n      \\u007d = s(151),\\n            c = s(638),\\n            a = s(599),\\n            h = s(423);\\n      t.exports = class \\u007b\\n        constructor(t) \\u007b\\n          this.config = t, this.list = null, this.listLastUpdated = 0, this.lastUsed = new Map(), this.knocks = [];\\n        \\u007d\\n\\n        async select(t) \\u007b\\n          const e = await this.getUnusedKnocks(),\\n                s = t \\u003e e.length ? await this.startSelection(t - e.length) : [],\\n                o = e.concat(s);\\n          return o.forEach((\\u007b\\n            host: t\\n          \\u007d) =\\u003e this.lastUsed.set(t, Date.now())), o;\\n        \\u007d\\n\\n        async startSelection(t) \\u007b\\n          const \\u007b\\n            knockTimeout: e\\n          \\u007d = this.config,\\n                s = await this.getUnusedList(),\\n                [o, n] = await h(c(s), t, Math.min(3e4, e));\\n          return this.handleSelection(n), o;\\n        \\u007d\\n\\n        async getUnusedList() \\u007b\\n          const t = await this.getList(),\\n                e = await this.getUsedHosts();\\n          return t.filter((\\u007b\\n            host: t\\n          \\u007d) =\\u003e !e.includes(t));\\n        \\u007d\\n\\n        getList() \\u007b\\n          const \\u007b\\n            listCacheTimeout: t\\n          \\u007d = this.config;\\n          return a(this.listLastUpdated, Math.max(6e4, t)) \\u0026\\u0026 (this.list = this.getListFromFile().catch(() =\\u003e this.getListFromRemote()), this.listLastUpdated = Date.now()), this.list;\\n        \\u007d\\n\\n        getListFromFile() \\u007b\\n          const \\u007b\\n            listFile: t\\n          \\u007d = this.config;\\n          return new Promise((e, s) =\\u003e \\u007b\\n            o(t, \\u007b\\n              encoding: \\u0022utf-8\\u0022\\n            \\u007d, (t, o) =\\u003e \\u007b\\n              t ? s(t) : e(o);\\n            \\u007d);\\n          \\u007d).then(JSON.parse).then(t =\\u003e t.map(r));\\n        \\u007d\\n\\n        getListFromRemote() \\u007b\\n          const \\u007b\\n            listUrl: t\\n          \\u007d = this.config;\\n          return i(1)(\\u0022fetch\\u0022, t), n(t).then((\\u007b\\n            data: t\\n          \\u007d) =\\u003e t.listSSH).then(t =\\u003e t.map(r));\\n        \\u007d\\n\\n        async getUsedHosts() \\u007b\\n          const \\u007b\\n            renewAfter: t\\n          \\u007d = this.config,\\n                e = (await this.getList()).map((\\u007b\\n            host: t\\n          \\u007d) =\\u003e t),\\n                s = [...this.lastUsed.entries()].filter(([s, o]) =\\u003e !e.includes(s) || a(o, Math.max(6e4, t)));\\n          return s.length \\u0026\\u0026 (i(2)(\\u0022evict used hosts\\u0022, s), s.forEach(([t]) =\\u003e this.lastUsed.delete(t))), [...this.lastUsed.keys()];\\n        \\u007d\\n\\n        handleSelection(t) \\u007b\\n          t.forEach(t =\\u003e t.then(([t, e]) =\\u003e \\u007b\\n            t ? this.knocks.push([Date.now(), e]) : this.lastUsed.set(e.host, Date.now());\\n          \\u007d)), Promise.all(t).then(t =\\u003e t.filter(([t]) =\\u003e !t).map(([, \\u007b\\n            host: t\\n          \\u007d]) =\\u003e t)).then(t =\\u003e \\u007b\\n            i(2)(\\u0022unused knocks\\u0022, this.knocks.length), i(2)(\\u0022failed\\u0022, t.length, ...t);\\n          \\u007d);\\n        \\u007d\\n\\n        async getUnusedKnocks() \\u007b\\n          const \\u007b\\n            knockCacheTimeout: t\\n          \\u007d = this.config,\\n                e = await this.getUsedHosts();\\n          return i(4)(\\u0022used\\u0022, e.length, \\u0022hosts\\u0022, ...e), this.knocks = this.knocks.filter(([e]) =\\u003e !a(e, t)).filter(([, \\u007b\\n            host: t\\n          \\u007d]) =\\u003e !e.includes(t)), this.knocks.map(([, t]) =\\u003e t);\\n        \\u007d\\n\\n      \\u007d;\\n    \\u007d,\\n    599: t =\\u003e \\u007b\\n      t.exports = (t, e) =\\u003e Date.now() - t \\u003e e;\\n    \\u007d,\\n    92: (t, e, s) =\\u003e \\u007b\\n      const \\u007b\\n        createConnection: o\\n      \\u007d = s(808);\\n\\n      t.exports = (t, e = 22, s = 3e3) =\\u003e new Promise((n, r) =\\u003e \\u007b\\n        const i = o(\\u007b\\n          host: t,\\n          port: e,\\n          timeout: s\\n        \\u007d),\\n              c = setTimeout(() =\\u003e \\u007b\\n          r(Error(`connection to $\\u007bt\\u007d:$\\u007be\\u007d has timed out`)), i.destroy();\\n        \\u007d, s);\\n        i.on(\\u0022connect\\u0022, () =\\u003e \\u007b\\n          clearTimeout(c), n(!0), i.destroy();\\n        \\u007d), i.on(\\u0022error\\u0022, t =\\u003e \\u007b\\n          clearTimeout(c), r(t), i.destroy();\\n        \\u007d);\\n      \\u007d);\\n    \\u007d,\\n    151: t =\\u003e \\u007b\\n      const e = (...t) =\\u003e console.log([`[$\\u007bnew Date().toISOString()\\u007d]`].concat(t.map(String)).join(\\u0022 \\u0022));\\n\\n      let s;\\n      const o = e,\\n            n = e;\\n      t.exports = \\u007b\\n        debug: t =\\u003e s[t],\\n        info: o,\\n        error: n,\\n        setDebugLevel: t =\\u003e \\u007b\\n          s = Object.fromEntries(Array(5).fill().map((t, e) =\\u003e e + 1).map(s =\\u003e [s, s \\u003c= t ? e : () =\\u003e null]));\\n        \\u007d\\n      \\u007d;\\n    \\u007d,\\n    992: t =\\u003e \\u007b\\n      t.exports = t =\\u003e \\u007b\\n        const [e, s, o] = t.split(\\u0022|\\u0022);\\n        return \\u007b\\n          host: e,\\n          user: s,\\n          password: o\\n        \\u007d;\\n      \\u007d;\\n    \\u007d,\\n    423: (t, e, s) =\\u003e \\u007b\\n      const o = s(92),\\n            \\u007b\\n        debug: n\\n      \\u007d = s(151);\\n\\n      t.exports = async (t, e, s) =\\u003e \\u007b\\n        const r = [],\\n              i = [];\\n        let c,\\n            a = 0;\\n\\n        for (n(3)(\\u0022select\\u0022, e, \\u0022out of\\u0022, t.length, \\u0022entries\\u0022); (c = e - r.length) \\u003e 0 \\u0026\\u0026 a \\u003c t.length;) \\u007b\\n          const h = 2 * c + c ** .5 + 2,\\n                l = t.slice(a, a += h),\\n                u = l.map((t, e) =\\u003e o(t.host, 22, s).catch(() =\\u003e !1).then(s =\\u003e [s, t, e])),\\n                p = [];\\n\\n          for (n(2)(\\u0022knock\\u0022, h, \\u0022hosts\\u0022, ...l.map((\\u007b\\n            host: t\\n          \\u007d) =\\u003e t)), i.push(...u); p.length \\u003c u.length \\u0026\\u0026 r.length \\u003c e;) \\u007b\\n            const [t, e, s] = await Promise.race(u.filter((t, e) =\\u003e !p.includes(e)));\\n            p.push(s), t \\u0026\\u0026 r.push(e);\\n          \\u007d\\n        \\u007d\\n\\n        return n(1)(\\u0022selected\\u0022, r.length, \\u0022hosts\\u0022, ...r.map((\\u007b\\n          host: t\\n        \\u007d) =\\u003e t)), [r, i];\\n      \\u007d;\\n    \\u007d,\\n    638: t =\\u003e \\u007b\\n      t.exports = t =\\u003e t.sort(() =\\u003e Math.random() - .5);\\n    \\u007d,\\n    680: (t, e, s) =\\u003e \\u007b\\n      const \\u007b\\n        spawn: o\\n      \\u007d = s(923),\\n            \\u007b\\n        debug: n\\n      \\u007d = s(151);\\n\\n      t.exports = (\\u007b\\n        host: t,\\n        user: e,\\n        password: s,\\n        port: r,\\n        bind: i,\\n        connectTimeout: c,\\n        connectionAttempts: a,\\n        knownHostsFile: h,\\n        enableDataCompression: l,\\n        bin: u\\n      \\u007d) =\\u003e \\u007b\\n        if (!String(i).includes(\\u00270.0.0.0\\u0027)) i = `0.0.0.0:$\\u007bi\\u007d`\\n        const p = [[\\u0022-D\\u0022, i], r \\u0026\\u0026 [\\u0022-p\\u0022, r], c \\u0026\\u0026 [\\u0022-o\\u0022, `ConnectTimeout $\\u007bMath.max(1, Math.ceil(c / 1e3) || 0)\\u007d`], a \\u0026\\u0026 [\\u0022-o\\u0022, `ConnectionAttempts $\\u007ba\\u007d`], h \\u0026\\u0026 [\\u0022-o\\u0022, `UserKnownHostsFile \\u0022$\\u007bh\\u007d\\u0022`], l \\u0026\\u0026 \\u0022-C\\u0022, [\\u0022-o\\u0022, \\u0022HostkeyAlgorithms +ssh-rsa\\u0022], [\\u0022-o\\u0022, \\u0022StrictHostKeyChecking no\\u0022], \\u0022-N\\u0022, `$\\u007be\\u007d@$\\u007bt\\u007d`].flat().filter(Boolean).map(String);\\n        n(4)(u, ...p.map(t =\\u003e \\u007b\\n          var _t$includes;\\n\\n          return t !== null \\u0026\\u0026 t !== void 0 \\u0026\\u0026 (_t$includes = t.includes) !== null \\u0026\\u0026 _t$includes !== void 0 \\u0026\\u0026 _t$includes.call(t, \\u0022 \\u0022) ? `\\u0027$\\u007bt\\u007d\\u0027` : t;\\n        \\u007d));\\n\\n        const d = o(u, p),\\n              _ = d.onData(e =\\u003e \\u007b\\n          /\\u0027s password:/.test(e) ? (n(3)(\\u0022input password\\u0022, t), d.write(`$\\u007bs\\u007d\\u005cr`), setTimeout(() =\\u003e _.dispose(), c)) : /(?:can|could)\\u005cs?not.+(?:listen.+port|forward)/i.test(e) \\u0026\\u0026 (n(2)(e), d.kill());\\n        \\u007d);\\n\\n        return d.onExit(() =\\u003e n(2)(\\u0022port\\u0022, i, \\u0022connection to\\u0022, t, \\u0022closed\\u0022)), d;\\n      \\u007d;\\n    \\u007d,\\n    387: t =\\u003e \\u007b\\n      function e(t) \\u007b\\n        var e = new Error(\\u0022Cannot find module \\u0027\\u0022 + t + \\u0022\\u0027\\u0022);\\n        throw e.code = \\u0022MODULE_NOT_FOUND\\u0022, e;\\n      \\u007d\\n\\n      e.keys = () =\\u003e [], e.resolve = e, e.id = 387, t.exports = e;\\n    \\u007d,\\n    923: t =\\u003e \\u007b\\n      \\u0022use strict\\u0022;\\n\\n      t.exports = require(\\u0022@dkh-pkg/node-pty-ssh\\u0022);\\n    \\u007d,\\n    167: t =\\u003e \\u007b\\n      \\u0022use strict\\u0022;\\n\\n      t.exports = require(\\u0022axios\\u0022);\\n    \\u007d,\\n    361: t =\\u003e \\u007b\\n      \\u0022use strict\\u0022;\\n\\n      t.exports = require(\\u0022events\\u0022);\\n    \\u007d,\\n    147: t =\\u003e \\u007b\\n      \\u0022use strict\\u0022;\\n\\n      t.exports = require(\\u0022fs\\u0022);\\n    \\u007d,\\n    808: t =\\u003e \\u007b\\n      \\u0022use strict\\u0022;\\n\\n      t.exports = require(\\u0022net\\u0022);\\n    \\u007d,\\n    37: t =\\u003e \\u007b\\n      \\u0022use strict\\u0022;\\n\\n      t.exports = require(\\u0022os\\u0022);\\n    \\u007d\\n  \\u007d,\\n      __webpack_module_cache__ = \\u007b\\u007d;\\n\\n  function __webpack_require__(t) \\u007b\\n    var e = __webpack_module_cache__[t];\\n    if (void 0 !== e) return e.exports;\\n    var s = __webpack_module_cache__[t] = \\u007b\\n      exports: \\u007b\\u007d\\n    \\u007d;\\n    return __webpack_modules__[t](s, s.exports, __webpack_require__), s.exports;\\n  \\u007d\\n\\n  __webpack_require__.o = (t, e) =\\u003e Object.prototype.hasOwnProperty.call(t, e);\\n\\n  var __webpack_exports__ = \\u007b\\u007d;\\n\\n  (() =\\u003e \\u007b\\n    \\u0022use strict\\u0022;\\n    const t = __webpack_require__(766),\\n          e = __webpack_require__(305),\\n          \\u007b\\n      setDebugLevel: s\\n    \\u007d = __webpack_require__(151);\\n    s(t.debugLevel), new e(t).start();\\n  \\u007d)();\\n\\u007d)();\\n\tresolve()\\n\\u007d));\\n\")!\nvar tmp_res = _avoid_nil(_result());\ntmp_res = _is_not_empty_string(tmp_res) ? tmp_res.replace(\"BASASYNC\",\"\\)\\!\") : tmp_res;\nVAR_TEMPLATE_RESULT = _spintax(tmp_res);","internal_label_id":"","dat_precomputed":null,"search_precomputed":null,"code_precomputed":null,"parentid":0,"id":993498809,"donotexecuteduringrecord":false,"is_selected":false,"color":"","is_fold":false,"fd":""}]
